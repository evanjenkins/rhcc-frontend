/**
 * px to rem
 * @link http://www.pjmccormick.com/sweet-sass-function-convert-px-em
 * @requires {variable} $font__base_size
 * @param {number} $target - size to convert
 * @param {number} $context ($font__base_size) - context conversion is based on
 * @example scss
 * .foobar { padding-bottom: rem(30); }
 * @returns {number}
 */

@function rem($target, $context: $font__base_size) {
  @if $target == 0 {
    @return 0;
  }

  $target: strip-unit($target);
  $context: strip-unit($context);
  @return $target / $context + 0rem;
}

/**
 * Multi-value rem calc: ie: margin(10px 0 20px 0);
 */
@function rem-calc($values, $base-value: $font__base_size) {
  $max: length($values);

  @if $max == 1 { @return rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

/**
 * Strip Unit Values
 * @link http://hugogiraudel.com/2013/08/12/sass-functions
 * @param {string} $num
 * @example scss
 * .foobar { padding-bottom: strip-unit(30px); }
 * @returns {number}
 */

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
